package com.emp.portal.controller;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;

import com.emp.portal.model.Employee;
import com.emp.portal.service.EmployeeService;

@RunWith(SpringRunner.class)
@WebMvcTest(value=EmployeeControllerTest.class)
public class EmployeeControllerTest {

	@Autowired
	private MockMvc mockMvc;

	@MockBean
	private EmployeeService empService;
	
	@Test
	public void testRegisterEmployee() throws Exception {
		
		Employee mockEmployee = new Employee();
		mockEmployee.setTicketId(1);
		mockEmployee.setPassengerName("Martin Bingel");
		mockEmployee.setSourceStation("Kolkata");
		mockEmployee.setDestStation("Delhi");
		mockEmployee.setBookingDate(new Date());
		
		String inputInJson = this.mapToJson(mockEmployee);
		
		String URI = "/api/tickets/create";
		
		Mockito.when(ticketBookingService.createTicket(Mockito.any(Ticket.class))).thenReturn(mockTicket);
		
		RequestBuilder requestBuilder = MockMvcRequestBuilders
				.post(URI)
				.accept(MediaType.APPLICATION_JSON).content(inputInJson)
				.contentType(MediaType.APPLICATION_JSON);

		MvcResult result = mockMvc.perform(requestBuilder).andReturn();
		MockHttpServletResponse response = result.getResponse();
		
		String outputInJson = response.getContentAsString();
		
		assertThat(outputInJson).isEqualTo(inputInJson);
		assertEquals(HttpStatus.OK.value(), response.getStatus());
	}
}
